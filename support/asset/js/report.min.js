if("undefined"==typeof window)test(function(e,s,l){
"pass"==e?console.log("[32mâœ”[0m "+s+": "+l):"fail"!=e&&"except"!=e||console.log("[31mâœ˜[0m "+s+": "+l)
});else{var css=document.createElement("style")
;css.type="text/css",css.innerHTML='.kludjs li, .kludjs ul { margin: 0; padding: 0; }.kludjs-pass, .kludjs-except, .kludjs-fail { list-style: none; }.kludjs-pass:before {content:"âœ“";margin-right:1em;color:green;}.kludjs-fail:before, .kludjs-except:before {content:"âœ–";margin-right:1em;color:red;}.kludjs-singleton ul, .kludjs-singleton li { display:inline; }.kludjs-singleton li { margin-left:2em; }',
document.head.appendChild(css)
;var el,testEl,assertEl,passed,failed;test(function(e,s,l){
void 0===el&&((el=document.createElement("ul")).className="kludjs",
(document.querySelector(".kludjs")||document.body).appendChild(el)),
"begin"===e?(passed=failed=0,
testEl=document.createElement("li"),assertEl=document.createElement("ul"),
testEl.appendChild(document.createTextNode(s)),
testEl.appendChild(assertEl),el.appendChild(testEl)):"end"===e?(testEl.insertBefore(document.createTextNode(" ("+passed+"/"+(passed+failed)+")"),assertEl),
1===passed&&1===passed+failed&&(testEl.className="kludjs-singleton")):"pass"!==e&&"fail"!==e&&"except"!==e||(assertEl.innerHTML+='<li class="kludjs-item kludjs-'+e+'">'+l+"</li>",
"pass"===e?passed++:failed++)})}
"undefined"!=typeof module&&(module.exports=test);
